on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download ngrok
        # Download ngrok using a dedicated download action
        uses: actions/download@v2
        with:
          url: https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip
          dest: ngrok.zip

      - name: Extract ngrok
        # Extract the downloaded archive using a dedicated unzip action
        uses: unzip-action/unzip@v1.0.0
        with:
          src: ngrok.zip
          dest: .

      - name: Authenticate ngrok (Assuming you have NGROK_AUTH_TOKEN secret)
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable Remote Desktop (Assuming local admin rights)
        # This step might require additional configuration depending on your system
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0

      - name: Enable Firewall Rule for Remote Desktop
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Enable User Authentication for Remote Desktop
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

      - name: Create Local User (Assuming local admin rights)
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Create ngrok Tunnel
        run: .\ngrok\ngrok.exe tcp 3389

      # This step wouldn't work within the workflow (informational only)
      - name: Connect to RDP Manually (**Not possible within workflow**)
        # You would need to connect to the provided ngrok URL using a dedicated RDP client

      # Persistence of changes isn't achievable within the workflow (informational only)
        # Refer to previous discussions for alternative solutions involving remote storage
