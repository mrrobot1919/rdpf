on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download
        run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
      - name: Extract
        run: Expand-Archive ngrok.zip
      - name: Auth
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      - name: Enable TS (Assuming local admin rights)
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      - name: Enable Firewall Rule
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - name: Enable User Authentication
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      - name: Create Local User (Assuming local admin rights)
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      - name: Create Tunnel
        run: .\ngrok\ngrok.exe tcp 3389
      - name: Connect to RDP (**Not possible within workflow**)
        # This step wouldn't work within GitHub Actions
        # You would need to connect to the RDP manually using the provided ngrok URL

      # Here's where the hypothetical persistence logic would go (not possible within workflow)
      - name: Save Changes (**Not possible within workflow**)
        # This step would ideally use a tool like rsync or a script to copy changed files
        # to the remote storage location configured earlier

